<div class="ui stackable centered grid">
  <div class="five wide column">
    <h3 class="ui center aligned header"><%= t('.header') %></h3>
    <%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: 'ui form' }) do |f| %>
      <%= render 'shared/error_messages', object: resource %>
      <div class="field">
        <%= f.label :username %>
        <%= f.text_field :username, autofocus: true %>
      </div>
      <div class="field">
        <%= f.label :email %>
        <%= f.email_field :email %>
      </div>
      <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
        <div><%= t('.waiting_confirmation') %> <%= resource.unconfirmed_email %></div>
      <% end %>
      <div class="field">
        <%= f.label :password %> (<%= t('.optional_password') %>)
        <%= f.password_field :password, autocomplete: 'off' %>
      </div>
      <div class="field">
        <%= f.label :password_confirmation %>
        <%= f.password_field :password_confirmation, autocomplete: 'off' %>
      </div>
      <div class="field">
        <%= f.label :current_password %> (<%= t('.required_current_password') %>)
        <%= f.password_field :current_password, autocomplete: "off" %>
      </div>
      <div class="field">
        <%= f.submit t('.update'), class: 'ui fluid submit green button' %>
      </div>
    <% end %>
    <%= button_to t('.delete_account'), registration_path(resource_name), class: 'ui inverted red fluid button', data: { confirm: t('.confirmation_message') }, method: :delete %>
  </div>
</div>
